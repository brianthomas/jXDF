	

	A list of things that have to be done before we can consider
	this package "BETA"
        ------------------------------------------------------------

	- Implement Formatted reads.
          Dataformat classes have regex, templateNotation, sprintFNotation methods.
          Are these needed? Closely evaluate these classes (after formatted read
          is implemented). Remove extraneous methods.

        - make init protected for all main classes (to allow inheritance of classes
          in other dataformats like FITSML).

        - Group cloning needs to be finished.
          XMLDataIOStyle has clone method in it, correct? (I did this, please check kelly)

        - In SaxDocumentHandler, need set/get for AxisObj, FieldObj, private
          globals so we can mimic id/idref stuff. In fact, we should just
          switch to 1 global array of generic objects... 

        - readId/readIdRef not implimented in SaxDocHandler (?)

        - fix the repeatable attribute on string parsing

	- Impliment octal/hex data read/write in SaxDocHandler.

	- Impliment binary data read/write in SaxDocHandler/Binary*DataFormats.

        - fix the repeatable attribute on string parsing

        - dropping relationship after output fed thru parser a second time.
        - notes w/ refId getting 2x the amount of text should have after output fed
          thru a second time.

        - check that notesEndElementHandlerFunc is finished (?)

	- always use constants (sPCDATAAttribute = "value") 

	- if the attribute is primitive number, *get* function overloading, two
 	 *set* functions--one returning primitive number, one returning Number object

	- Update all derived locators when axis is add/removed from an array.

        - Remove Perl junk in documentation. Improve the content of the doc text.

	- Number of significant digits being written out in XML is not
          controlled by dataFormat at this time. Also, Exponential format
	  may print out wi/o the 'E'.  


	A list of things that have to be done before we can consider
	this package "FINAL"
        ------------------------------------------------------------
   
	- Improve efficiency of data reading. Direct char->number converstion
	  (faster) rather than convert to String, then to a number object,
          then to a primative (in SaxDocumentHandler:addData.. private method).

	- Correct Notes/Location attribute maddness. Notes should carry around
	  locator object ref's rather than nasty space delimited strings.

	- Treatment of special characters (like NEWLINE) should be entities 
          (&newline;) in element attributes of output XML (this causes a problem
          with being able to re-load delimited case data w/ newline recordterminators). 

	- Make methods/classes as consistent as possible with Perl package.

        - the XML declaration hash doesnt allow user to declare the XML version;
          (partly because XMLDecl Hashtable is not an orderd object, and we cant
           insure that "version" will be the first attribute (and why this needs
	   to be is difficult for me to understand, but thats another matter..).
	   ) so we need to review if current implementation is correct.

	- Check synchronization issues on all code (develop threaded tests). 

        - Need Code review, issues:
            1. Are Utility, Constants (and other) classes truely independant? 
               Shunt methods to places they are used.
	    2. Remove unnecessary methods like setDimension, etc.

	- Overflow, Underflow, NaN issues for data. What does "null" cell really mean?.


        Things for the next big version upgrade to XDF version 0.19
        ============================================================

	- Allow for uneven precision in data. 

	- MathML units.

        - placement of parameter objects under more classes (e.x. axis, field)

	- XDF functions.

	- Face up to the setData/dataFormat problem. What happens when a user
          sets the first data? Check that it conforms to the declared dataFormat
	  before allocating the primitive array that will hold the datum.


        Longer term issues
        ==================

        - Making the package compile on W32 machines using nmake.

        - Large datasets. When to automatically switch to persistent dataCube 
          How much memory to use, efficiency issues. Native code alternative to
          Java (?).

	- Internal directory of user-defined parameters. Allow applications always
	  a way of finding the science parameters/keywords even if XDF parameter
          isnt used to hold the information.

	- use of offset reading to allow XDF to wrap complex binary/ascii data file(s).

	- explore holding recursive datastructures? Ex. FITS BINTABLE, b-trees, etc.



