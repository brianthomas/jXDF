

	A list of things that have to be done before we can consider
	this package "ALPHA"
        ------------------------------------------------------------

	- Implement Formatted reads.

        - make init protected for all main classes.

        - in SaxDocumentHandler, need set/get for AxisObj, FieldObj, private
          globals so we can mimic id/idref stuff. In fact, we should just
          switch to 1 global array of generic objects... 

        - readId/readIdRef not implimented in SaxDocHandler (?)

        - XMLDataIOStyle has clone method in it, correct? (I did this, not kelly?)

	- Efficiency issues. Don't use sth. like attrib.size() in the for loop
          (now fixed? review code again)

        - Dataformat classes have regex, templateNotation, sprintFNotation methods.
          Are these needed? Closely evaluate these classes (in conjuction w/ Formatted
          IO code).
       
        - Are Utility, Constants classes truely independant? Shunt methods to
          places they are used.

        - fix the repeatable attribute on string parsing

        - dropping relationship after output fed thru parser a second time.
        - notes w/ refId getting 2x the amount of text should have after output fed
          thru a second time.

        - check that notesEndElementHandlerFunc is finished (?)

	- Use singleton for PrettyOutput, etc.

	- In some cases, passing null of not reasonable. We dont have 
          to check null to save some time. 

	- always use constants (sPCDATAAttribute = "value") 

	- if the attribute is primitive number, *get* function overloading, two
 	 *set* functions--one returning primitive number, one returning Number object

	- Syncronization may be violated for ArrayList? look into changing 
	  these to Vector (resolved?).

	- Check synchronization issues on all code (develop threaded tests). 

	- Update all derived locators when axis is add/removed from an array.

	- Review the API. Remove unnecessary methods like setDimension, etc.

        - Remove Perl junk in documentation. Improve the content of the text.

	- Number of significant digits being written out in XML is not
          controlled by dataFormat at this time. Also, Exponential format
	  may print out wi/o the 'E'.  

	- Impliment binary data read/write.

	- Impliment octal/hex data read/write.


	A list of things that have to be done before we can consider
	this package "BETA"
        ------------------------------------------------------------
   

	- Improve efficiency of data reading. Direct char->number converstion
	  (faster) rather than convert to String, then to a number object,
          then to a primative (in SaxDocumentHandler:addData.. private method).

	- Correct Notes/Location attribute maddness. Notes should carry around
	  locator object ref's rather than nasty space delimited strings.

	- Treatment of special characters (like NEWLINE) should be entities 
          (&newline;) in element attributes of output XML. 

	- Make methods/classes as consistent as possible with Perl package.

        - the XML declaration hash doesnt allow user to declare the XML version;
          (partly because XMLDecl Hashtable is not an orderd object, and we cant
           insure that "version" will be the first attribute (and why this needs
	   to be is difficult for me to understand, but thats another matter..).
	   ) so we need to review if current implementation is correct.

        Things for the next big version upgrade to XDF version 0.19
        ============================================================

	- Allow for uneven precision in data. 

	- MathML units.

	- XDF functions.

	- Face up to the setData/dataFormat problem. What happens when a user
          sets the first data? Check that it conforms to the declared dataFormat
	  before allocating the primitive array that will hold the datum.


        Longer term issues
        ==================

        - Large datasets. When to automatically switch to persistent dataCube 
          How much memory to use, efficiency issues. Native code alternative to
          Java (?).


