<?xml version="1.0"?>
<!-- 
    The XDF build file 
    CVS $Id$

    build.xml Copyright (C) 2001 Brian Thomas,
    ADC/GSFC-NASA, Code 631, Greenbelt MD, 20771

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

-->
<project name="XDF" default="help" basedir=".">

  <!-- set global properties for this build -->

  <property name="DTD_VERSION" value="018"/>
  <property name="path" value="gov/nasa/gsfc/adc/xdf"/>
  <property name="src" value="src/${path}"/>
  <property name="build" value="."/>
  <property name="docApi"  value="docs/api"/>
  <property name="build.compiler" value="modern"/>
  <property name="adc_xml_homepage" value="http://xml.gsfc.nasa.gov"/>

  <!-- Targets Start -->

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${docApi}"/>
  </target>

  <target name="initTest">
     <!-- build software -->
     <javac debug="on" srcdir="test"/>
     <taskdef name="createXDFTest" classname="test.CreateXdfTest" classpath="test"/>
     <taskdef name="loadXDFTest" classname="test.loadXDFTest" classpath="test"/>
     <taskdef name="validateTest" classname="test.ValidateTest" classpath="test"/>
  </target>

  <!-- <target name="test" depends="initTest"> -->
  <target name="test" depends="compile,initTest">

    <!-- crimson parser isnt smart enough to follow the cheese. We have to 
         copy the DTD up to the present directory in order to play ball
      -->
    <copy file="samples/XDF_${DTD_VERSION}.dtd" todir="."/>
    <echo message="Running tests..." />

    <antcall target="creationTest">
         <param name="internalFile" value="false"/>
         <param name="dataiostyle" value="tagged"/>
    </antcall>

    <antcall target="creationTest">
         <param name="internalFile" value="true"/>
         <param name="dataiostyle" value="tagged"/>
    </antcall>

    <antcall target="creationTest">
         <param name="internalFile" value="false"/>
         <param name="dataiostyle" value="delimited"/>
    </antcall>

    <antcall target="creationTest">
         <param name="internalFile" value="true"/>
         <param name="dataiostyle" value="delimited"/>
    </antcall>

    <antcall target="creationTest">
         <param name="internalFile" value="false"/>
         <param name="dataiostyle" value="formatted"/>
    </antcall>

    <antcall target="creationTest">
         <param name="internalFile" value="true"/>
         <param name="dataiostyle" value="formatted"/>
    </antcall>


    <!-- check loading/re-loading of existing files -->
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample1.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample2.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample3.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample4.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample5.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample6.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample7.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample8.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample9.xml"/></antcall>

    <!-- no bzip in Java (yet) :P -->
    <!-- <antcall target="loadingTests"><param name="file" value="samples/XDF_sample10.xml"/></antcall> -->

    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample11.xml"/></antcall>
    <antcall target="loadingTests"><param name="file" value="samples/XDF_sample12.xml"/></antcall>

    <antcall target="cleanRunTests"/>

  </target>

  <target name="creationTest" >
    <echo message="Checking creation of file XMLDataIOStyle=${dataiostyle} internalData=${internalFile} ..." />
    <createXDFTest writedatatoseparatefile="${internalFile}" 
                   dataiostyle="${dataiostyle}" 
                   outputfile="test1.xml" 
                   entityfilename="test1.dat" 
                   entityname="table1" 
                   showsuccess="true"/>
    <validateTest inputfile="test1.xml" showsuccess="true"/>
  </target>

  <target name="loadingTests" >
    <antcall target="loadXDFTest"><param name="file" value="${file}"/></antcall>
    <echo message="Checking validation of ${file} output ..." />
    <validateTest inputfile="test1.xml" showsuccess="true"/>
  </target>

  <target name="loadXDFTest" >
    <echo message="Checking loading ${file} ..." />
    <loadXDFTest inputfile="${file}" outputfile="test1.xml" />
    <loadXDFTest inputfile="test1.xml" outputfile="test2.xml" showsuccess="true"/>
  </target>

  <target name="cleanRunTests" >
    <echo message="Cleaning up test files.." />
    <delete file="test1.xml"/>
    <delete file="test0.dat"/>
    <delete file="test1.dat"/>
    <delete file="test2.xml"/>
    <delete file="XDF_${DTD_VERSION}.dtd"/>
  </target>


  <target name="dump-info" >
    <echo message="java.vm.info=${java.vm.info}" />
    <echo message="java.vm.name=${java.vm.name}" />
    <echo message="java.vm.vendor=${java.vm.vendor}" />
    <echo message="java.vm.version=${java.vm.version}" />
    <echo message="os.arch=${os.arch}" />
    <echo message="os.name=${os.name}" />
    <echo message="os.version=${os.version}" />
    <echo message="file.encoding=${file.encoding}" />
    <echo message="user.language=${user.language}" />
  </target>

  <target name="compile" depends="init">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac debug="on" srcdir="${src}" destdir="${build}"/> 
  </target>

  <target name="jar" depends="compile">
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <!-- <jar jarfile="xdf-${DSTAMP}.jar" basedir="${path}"/> --> 
    <jar jarfile="xdf-${DTD_VERSION}.jar" includes="gov/**" basedir="."/>
  </target>

  <target name="doc" depends="init">
    <!-- <javadoc srcdir="${src}" destdir="${doc}"/> -->

    <javadoc packagenames="gov.nasa.gsfc.adc.xdf.*"
             sourcepath="src"
             defaultexcludes="yes"
             destdir="${docApi}"
             author="true"
             version="true"
             use="true"
             windowtitle="eXtensible Data Format API">
        <header><![CDATA[<h2><a href="${adc_xml_homepage}">ADC XML Group</a></h2><A HREF="http://www.nasa.gov/"><IMG SRC="http://adc.gsfc.nasa.gov/adc/images/nasalogo.gif" BORDER=0 ALT=\"NASA insignia\"></A><br>
<h2><A HREF="mailto:xdf@xdf.gsfc.nasa.gov">Contact the ADC XDF Group</a></h2>]]></header>
        <doctitle><![CDATA[<h2>Java XDF API</h2>]]></doctitle>
<!--
        <footer>FOOTER</footer>
-->
        <footer></footer>
        <bottom><![CDATA[<i>Copyright &#169; 2001 Brian Thomas. All Rights Reserved.  This is free software, and you are welcome to redistribute it under certain conditions.  This software comes with ABSOLUTELY NO WARRANTY. For details on terms and conditions of use refer to the README and LICENCE files included in the software distribution.</i>]]></bottom>
        <group title="Core Package" packages="gov.nasa.gsfc.adc.xdf.*"/>
        <group title="XDF/DOM Package" packages="gov.nasa.gsfc.adc.xdf.DOM.*"/>
        <link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="C:\tmp"/>
        <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
    </javadoc>

  </target>

  <target name="all" depends="jar,doc,test"/>

  <target name="help">
    <echo message="Invoke 'ant' with one of the following options:" />
    <echo message=" "/>
    <echo message="   all       - do the 'jar', 'doc' and 'test' commands" />
    <echo message="   compile   - compile XDF classes only (no jar file)" />
    <echo message="   clean     - clean up temporary directories" />
    <echo message="   doc       - compile XDF API documentation" />
    <echo message="   dump-info - dump information about your machine" />
    <echo message="   help      - print this help message and exit" />
    <echo message="   jar       - compile XDF jar file" />
    <echo message="   test      - runs tests of the build" />
    <echo message=" "/>
    <echo message=" "/>
    <echo message="Example usage: "/>
    <echo message=" "/>
    <echo message="> ant compile "/>
  </target>

  <target name="clean">
    <delete>
       <fileset dir="test" includes="*.class"/>
    </delete>
    <delete dir="gov"/>
    <delete file="xdf-${DTD_VERSION}.jar"/>
    <delete dir="${docApi}"/>
    <antcall target="cleanRunTests"/>
  </target>

</project>
